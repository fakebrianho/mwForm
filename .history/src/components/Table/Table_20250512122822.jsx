/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import React, { useRef, useMemo } from 'react'
import { useGLTF } from '@react-three/drei'
import * as THREE from 'three'

export function Table(props) {
	const { nodes, materials } = useGLTF('/size.glb')

	// Create basic materials with the same colors as the original materials
	const basicMaterials = useMemo(() => {
		const materials = {}
		for (let i = 0; i <= 19; i++) {
			const matName = `Material_${i}`
			materials[matName] = new THREE.MeshBasicMaterial({
				color: new THREE.Color(0xcccccc), // Default color
				// You can add other properties like map if needed:
				// map: originalMaterial.map
			})
		}
		return materials
	}, [])

	return (
		<group {...props} dispose={null}>
			<mesh
				geometry={nodes.Keyboard.geometry}
				material={basicMaterials.Material_0}
				position={[-0.5, 1.6, 0.8]}
				rotation={[0.2, 0, 0]}
				scale={0.5}
			/>
			<group position={[-2.5, 1.7, 0.1]} scale={[1, 1, 0.9]}>
				<mesh
					geometry={nodes.Filling_cabnet_1.geometry}
					material={basicMaterials.Material_1}
				/>
				<mesh
					geometry={nodes.Filling_cabnet_10.geometry}
					material={basicMaterials.Material_10}
				/>
				<mesh
					geometry={nodes.Filling_cabnet_2.geometry}
					material={basicMaterials.Material_2}
				/>
				<mesh
					geometry={nodes.Filling_cabnet_3.geometry}
					material={basicMaterials.Material_3}
				/>
				<mesh
					geometry={nodes.Filling_cabnet_4.geometry}
					material={basicMaterials.Material_4}
				/>
				<mesh
					geometry={nodes.Filling_cabnet_5.geometry}
					material={basicMaterials.Material_5}
				/>
				<mesh
					geometry={nodes.Filling_cabnet_6.geometry}
					material={basicMaterials.Material_6}
				/>
				<mesh
					geometry={nodes.Filling_cabnet_7.geometry}
					material={basicMaterials.Material_7}
				/>
				<mesh
					geometry={nodes.Filling_cabnet_8.geometry}
					material={basicMaterials.Material_8}
				/>
				<mesh
					geometry={nodes.Filling_cabnet_9.geometry}
					material={basicMaterials.Material_9}
				/>
			</group>
			<mesh
				geometry={nodes.Flower.geometry}
				material={basicMaterials.Material_11}
				position={[-1.4, 2.5, -0.2]}
				rotation={[-2.7, 0.7, 2.3]}
				scale={[0, 0.3, 0.1]}
			/>
			<mesh
				geometry={nodes.Desk.geometry}
				material={basicMaterials.Material_12}
				position={[0, 1.5, 0.2]}
			/>
			<mesh
				geometry={nodes.Mouse.geometry}
				material={basicMaterials.Material_13}
				position={[0.9, 1.6, 0.9]}
				scale={[0.3, 0.3, 0.4]}
			/>
			<group position={[0.3, 2, 0.5]} rotation={[1.6, 0, 0]} scale={0.1}>
				<mesh
					geometry={nodes.Monitor_1.geometry}
					material={basicMaterials.Material_14}
				/>
				<mesh
					geometry={nodes.Monitor_2.geometry}
					material={basicMaterials.Material_15}
					position={[-4.8, -0.1, -6.3]}
				/>
				<mesh
					geometry={nodes.Monitor_3.geometry}
					material={basicMaterials.Material_17}
				/>
				<mesh
					geometry={nodes.Monitor_4.geometry}
					material={basicMaterials.Material_18}
				/>
				<mesh
					geometry={nodes.Monitor_5.geometry}
					material={basicMaterials.Material_16}
				/>
			</group>
			<mesh
				geometry={nodes.Cpu.geometry}
				material={basicMaterials.Material_19}
				position={[0.5, 1.7, 0.5]}
				rotation={[1.6, 0, 0]}
				scale={0.1}
			/>
		</group>
	)
}

useGLTF.preload('/size.glb')
